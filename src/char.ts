export type CharCodeList = number[];

export const charCodeToExp = (charCode: number) => (
	'\\x' + (charCode < 0x10 ? '0' : '') + charCode.toString(16)
);

export const buildSimpleCharCodeList = (inputList: CharCodeList) => {
	let result = '';
	let run = false;

	for (let i = 0; i < inputList.length; i++) {
		const lastCh = inputList[i - 1];
		const thisCh = inputList[i];
		const nextCh = inputList[i + 1];
		if (lastCh + 1 === thisCh && nextCh - 1 === thisCh) {
			if (run) {
				continue;
			}
			run = true;
			result += '-';
		} else {
			run = false;
			result += charCodeToExp(thisCh);
		}
	}

	return result;
};

export const SYMBOLS = Object.freeze({
	0x00: 'NUL',
	0x01: 'SOH',
	0x02: 'STX',
	0x03: 'ETX',
	0x04: 'EOT',
	0x05: 'ENQ',
	0x06: 'ACK',
	0x07: 'BEL',
	0x08: 'BS',
	0x09: 'HT',
	0x0A: 'LF',
	0x0B: 'VT',
	0x0C: 'FF',
	0x0D: 'CR',
	0x0E: 'SO',
	0x0F: 'SI',
	0x10: 'DLE',
	0x11: 'DC1',
	0x12: 'DC2',
	0x13: 'DC3',
	0x14: 'DC4',
	0x15: 'NAK',
	0x16: 'SYN',
	0x17: 'ETB',
	0x18: 'CAN',
	0x19: 'EM',
	0x1A: 'SUB',
	0x1B: 'ESC',
	0x1C: 'FS',
	0x1D: 'GS',
	0x1E: 'RS',
	0x1F: 'US',
	0x20: 'SP',
	0x7F: 'DEL',
});

export const hasSymbol = (charCode: number) => (
	charCode in SYMBOLS
);

export const getSymbol = (charCode: number) => (
	SYMBOLS[charCode]
);

export const NON_PRINTABLE = [
	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
	0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,
];

export const PRINTABLE = [
	0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,
	0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,
	0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F,
	0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F,
	0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,
	0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F,
];

export enum Range {
	NON_PRINTABLE,
	PRINTABLE,
}
